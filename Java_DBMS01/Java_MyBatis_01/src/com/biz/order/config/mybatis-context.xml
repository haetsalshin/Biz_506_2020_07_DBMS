<?xml version="1.0" encoding="UTF-8"?>
<!-- 지금부터 작성하는 것은 xml형식이다라는 것을 명시 -->

<!--  앞으로 우리가 이용할 xml파일의 문법오류를 체크해주기 위한 사전 -->
<!DOCTYPE configuration
  PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-config.dtd">
  
<!-- 쌤) mybatis-context.xml 파일은 mybais를 사용하는 project에서
	가장 필수적으로 작성해야 하는 파일이다.
	project가 시작될 때 mybatis framework는 이 파일의 정보를 기초로
	SplSessionFactory를 만들고 DB에 연결할 수 있는 코드를 내부적으로
	자동생성하게 된다.
	1. envorioment의 id설정
			이 설정 2개 이상의 DB에 연결하는 정보를 한 프로젝트에서 사용할 경우
			각 프로젝트의 설정을 식별하는 이름이다.
			한 프로젝트에서 유일한 이름으로 설정을 해 준다.
	2. environment의 dafault 설정
		한 프로젝트에서 여러개의 환경(Environment)가 있더라도 동시에 사용은
		어렵다.
		프로젝트 한 프로젝트에서 한개의 DBMS에 연결하는 것이 원칙이다.
		때문에 default값은 현재 프로젝트가 작동 될 때 사용할 DBMS연계를 
		수행할 id값을 지정한다. id랑 default는 똑같이 지정을 해줘야 한다.
		아래와 같이 mysqsl_datasource를 만들어 둘 수는 있지만 지금은 작동하지 않는다.
		나중을 위해서 만들어 두는 것.
		
	3. transactionManager
		transaction :
		DB와 연동하여 SQL을 수행할 때 다수의 SQL이 한개의 흐름에서 적용될 떄
		이 SQL의 모든 실행이 완전히 수행됨을 보장하는 것으로 
		
		실제 트랜잭션을 코드에서 수행하려면 상당히 많은 부분의 코드가 필요하다.
		잘못 설정하게 되면 프름을 방해하게 되고 프로젝트가 멈추는 현상까지 
		발생할 수 있다.
		
		mybatis를 사용하게 되면 지원되는 기능을 활용하여 
		최소한 기본적인 트랜잭션은 몇가지 옵션만 지정함으로써
		완성을 할 수 있다.
		
		transaction을 어떻게 수행할 것인가를 설정하는데
		transaction을 JDBC가 지원하는 기본값으로 설정한다.
		이를 위해서 type에 JDBC 값을 추가한다.
		
		
	* tag self closing
		: 열리는 tag와 닫히는 tag가 반드시 쌍을 이루어서 문서를 만들어야 하는데
		별도로 element tag가 필요없는 경우는 열리는 tag 끝에 슬래시 첨가하여 
		닫히는 tag를 생략 할 수 있다. 하단의 transactionManager를 참고하시오
			
	4. dataSource
		: DB에 연결하는데 필요한 driver, URL, username, password 등의 정보
		DBConnection을 만든는데 필요한 정보들	
		
		type:
			DBConnection을 수행하는데 사용할 관리자(Manager)를 무엇을 쓸 것인가
			POOLEd관리자를 사용한다.
			
		* POOLED 관리자 :
		Mybatis 자체에서 프로젝트가 시작되면 일정ㅎ한 개수의 Connection을 미리 만들어두고
		SQL 요청이 있으면 자동으로 사용하지 않는 Connection을 통해 
		명령, 데이터를 교환할 수 있도록 관리하는 클래스
		다른 Framework와 연동을 하면 다양한 관리자를 사용할 수 있다.	
	
	5. Property
		: tag에 설정할 속성값이 많을 경우
		별도로 property element tag를 사용하여 값들을 설정한다. 4가지가 필요하다(driver, url,
		username, password)
 -->
  

<!-- 꺽쇠는 Tag이며, 하나의 변수로 보면 된다. -->  

<configuration>

	<typeAliases>
	<typeAlias type="com.biz.order.model.OrderVO" alias="OrderVO" />
	</typeAliases>

	<!-- environments 는 default( : 속성 , 필드변수) 가 필요하다 -->
	<!--  어디든 다 속성이 들어가기때문에 xml에서는 꺽쇠안에 들어가는 게 모두 속성, 필드변수 -->
	<environments default="oracle_datasource">
	
		<!-- method  > public void environment(String id){} 와 같은 형태 -->
		<!-- environment는  transactionManager, dataSource 가 필요하다.  -->
		<environment id="oracle_datasource">
			<transactionManager type="JDBC" />
			
			<dataSource type="POOLED">
				<property name="driver" value="oracle.jdbc.driver.OracleDriver"/>
				<property name="url" value="jdbc:oracle:thin:@localhost:1521:xe"/>
				<property name="username" value="user2"/>
				<property name="password" value="user2"/>
			</dataSource>
		
		</environment>
			
	
	</environments>

		<mappers>
			<mapper resource="com/biz/order/mapper/order-mapper.xml" />
		</mappers>
	
		

</configuration>
